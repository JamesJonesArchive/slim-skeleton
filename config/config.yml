# Slim Configuration
slimSettings:
  displayErrorDetails: true
  logger:
    path: ../logs/application.log
    name: PeopleSoftAuthenticator
  # Use Twig for templating
  view:
    template_path: ../templates
    twig:
      cache: ../cache
      debug: false
      # Rebuild views whenever they change
      auto_reload: true
      # Auto escape HTML data
      autoescape: true
      # Ignore invalid variables instead of throwing an exception
      strict_variables: false
  nams:
    host: dev.example.edu
    restCasClient:
      cas_host: https://cas.example.usf.edu
      cas_user: test
      cas_password: 'SECRET'
      ticket_storage: '/tmp/PeopleSoftAuthenticator_TGT.json'
  accountTypes:
    SelfService: PeopleSoftSS
    GEMS: PeopleSoftHR
    FAST: PeopleSoftFM
  defaultInstance: development
  instances:
    development:
      GEMS:
        encryptionKey: 1234567890123456
        encryptionBlockType: CBC
        host: gems.example.edu
        appPath: /psp/gemsdvlp-portal/
        port: 443
        deepLinkPath: EMPLOYEE/HRMS/c/
      SelfService:
        encryptionKey: 1234567890123456
        encryptionBlockType: CBC
        host: gems.example.edu
        appPath: /psp/gemsdvlp-portal/
        port: 443
        deepLinkPath: EMPLOYEE/HRMS/c/
      FAST:
        encryptionKey: 1234567890123456
        encryptionBlockType: CBC
        host: fast.example.edu
        appPath: /psp/fastdvlp-portal/
        port: 443
        deepLinkPath: EMPLOYEE/HRMS/c/
  authentication:
    # Use CAS for authentication
    cas:
      environment: development
    # AuthN/AuthZ Map -- List URL patterns from most to least specific
    interceptUrlMap:
      GET:
        '/health_check': # Health check is allowed without authentication
          authN: permitAll
          authZ: permitAll
        '^.*': # Use RegEx to match all URLs
          authN: CAS
          authZ: permitAll
      POST:
        '/**': # Use RegEx to match all URLs
          authN: CAS
          authZ: permitAll
      PUT:
        '/**':
          authN: denyAll
          authZ: denyAll
      DELETE:
        '/**':
          authN: denyAll
          authZ: denyAll
